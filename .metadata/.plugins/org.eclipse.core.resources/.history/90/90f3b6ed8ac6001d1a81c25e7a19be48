package homeworkmars;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class MarsMain {

	// Toplam Satır Sayısı-->50
	// Toplam Kelime Sayısı--> 273
	// toplam Karakter Sayısı--> 1593
	// En çok tekrar eden kelime--> arkadaş

	public static void satirSayisi() {
		int satirSayisi = 0;
		int kelimeSayisi = 0;
		int karakterSayisi = 0;

		try (Scanner scanner = new Scanner(new BufferedReader(new FileReader("mars.txt")))) {

			while (scanner.hasNextLine()) {
				String satir = scanner.nextLine();
				satirSayisi++;

				String array[] = satir.toLowerCase().split(" ");
				kelimeSayisi += array.length;

				for (int i = 0; i < array.length; i++) {
					karakterSayisi += array[i].length();
				}
			}

			System.out.println("Toplam satır sayısı: " + satirSayisi);
			System.out.println("Toplam kelime sayısı: " + kelimeSayisi);
			System.out.println("Toplam karakter sayısı: " + karakterSayisi);

		} catch (FileNotFoundException e) {
			System.out.println("Dosya bulunamadı.");
			e.printStackTrace();
		} catch (Exception e) {
			System.out.println("Bilinemeyen bir hata oluştu.");
		}
	}

	static Set<Character> harf = new HashSet<>();
	static Map<String, Integer> kelimeveAdet = new HashMap<>();

	public static int kelimeTekrarSayisi() {
		int kelimeSayisi =0;
		try (Scanner scanner = new Scanner(new BufferedReader(new FileReader("mars.txt")))) {
			
			while(scanner.hasNextLine()) {
				String okunanSatir = scanner.nextLine().toLowerCase();
				String array[] = okunanSatir.split(" ");
				for(String kelime2 : array) {
					String geciciKelime = kelime2;
					char[] chars = kelime2.toCharArray();
					try {
						if(chars.length==1 && chars[0] == 'o') {
							geciciKelime ="o";
						}
						else if (!harf.contains((char) chars[0])) {
							geciciKelime = geciciKelime.substring(1);
						}
						else if (!harf.contains((char) chars[chars.length-1])) {
							geciciKelime = geciciKelime.substring(0, chars.length-1);
						}
						
						else if (!harf.contains((char) chars[chars.length-2])) {
							geciciKelime = geciciKelime.substring(0, chars.length-1);
						}
						if (kelimeveAdet.containsKey(geciciKelime)) {
							kelimeveAdet.put(geciciKelime, kelimeveAdet.get(geciciKelime)+1);
							
						}
						else {
							kelimeveAdet.put(geciciKelime, 1);
						
						}
					} catch (IndexOutOfBoundsException e) {
						System.out.println("Dosya bulunamadı!");
						e.printStackTrace();
					} }
			}
		}
					return kelimeSayisi;
					}
				
					
				
			
			
			
		
		
		
	}

	public static void main(String[] args) {

	}

}
